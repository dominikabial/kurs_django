from django.http import HttpRequest, HttpResponse, Http404, HttpResponseRedirect
from django.template import loader
from django.urls import reverse

from .models import Question, Choice
from django.shortcuts import render, get_object_or_404


# Create your views here.

def index(request):
    return HttpResponse("Welcome on my index page")


def hello(request):
    return HttpResponse("Hello world")


def question_list(request):
    questions = Question.objects.all()
    # template = loader.get_template('123.html')
    context = {
        'questions': questions
    }
    # return HttpResponse(template.render(context, request))
    return render(
        request,
        template_name='123.html',
        context=context
    )


def detail(request, question_id):
    try:
        question = Question.objects.get(pk=question_id)
    except Question.DoesNotExist:
        raise Http404("Question does not exist")
    # template = loader.get_template('detail_123.html')
    context = {
        'question': question
    }
    print(context)
    # return HttpResponse(template.render(context, request))
    return render(
        request,
        template_name='detail_123.html',
        context=context
    )


def results(request, question_id):
    question = get_object_or_404(Question, pk=question_id)
    return render(
        request,
        template_name='results.html',
        context={
            'question': question}
    )
    #return HttpResponse(f"Wyniki glosowania: {question_id}")


def vote(request, question_id):
    question = get_object_or_404(Question, pk=question_id)
    choice_id = request.POST.get('choice')
    try:
        selected_choice = question.choice_set.get(pk=choice_id)

    except (KeyError, Choice.DoesNotExist):
        return render(
            request,
            template_name='detail_123.html',
            context={
                'question': question,
                'error_message': 'niewybrano odpowiedzi'}
        )
    else:
        selected_choice.votes += 1
        selected_choice.save()
        return HttpResponseRedirect(reverse('polls:results', args=(question.id,)))  # topla argument id z przecinkiem

    # return HttpResponse(f"glosuje w pytaniu: {question_id}")


https://github.com/dmajkic/redis/downloads >> redis_server

https://djangotricks.blogspot.com/2019/02/how-to-export-data-to-xlsx-files.html >excel

https://www.alx.pl/ankiety/3276esjq